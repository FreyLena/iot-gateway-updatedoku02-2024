[
    {
        "id": "9a3fe20a.8572d",
        "type": "tab",
        "label": "IoT Gateway",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ad1a5678.b85eb8",
        "type": "mqtt in",
        "z": "9a3fe20a.8572d",
        "name": "",
        "topic": "ie/d/j/simatic/v1/opcuac1/dp/r/plc1/tankLevel",
        "qos": "2",
        "datatype": "auto",
        "broker": "f9797e4b.7d9c9",
        "x": 190,
        "y": 320,
        "wires": [
            [
                "6f2a77c2.1dfe58"
            ]
        ]
    },
    {
        "id": "22f6f22c.83c4ce",
        "type": "function",
        "z": "9a3fe20a.8572d",
        "name": "calculate flow [m3/min]",
        "func": "\n//formula to calculate flowrate from discrete values: \n// flowrate = delta l / delta t\n\n// get previous level from context variable or 0 if it is not existing\nvar level1 = flow.get(\"level1\")||0;\n\n//get current level\nvar level2 = msg.payload.val\n\n//calculate volume difference\nvar flowrate = (level2 -level1)\n\n//save current level to context variable\nflow.set(\"level1\",msg.payload.val);\n\n//change l/s in m3/min\nmsg.payload=(flowrate*0.06);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 320,
        "wires": [
            [
                "8e6be387.e0155"
            ]
        ]
    },
    {
        "id": "6f2a77c2.1dfe58",
        "type": "json",
        "z": "9a3fe20a.8572d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 320,
        "wires": [
            [
                "22f6f22c.83c4ce"
            ]
        ]
    },
    {
        "id": "8e6be387.e0155",
        "type": "mqtt out",
        "z": "9a3fe20a.8572d",
        "name": "",
        "topic": "CloudConnector/toAWS",
        "qos": "",
        "retain": "",
        "broker": "f9797e4b.7d9c9",
        "x": 810,
        "y": 320,
        "wires": []
    },
    {
        "id": "1e8ada84.8caca5",
        "type": "comment",
        "z": "9a3fe20a.8572d",
        "name": "Before Deploying: \\n - enter the username and password of the IE Databus user in the configuration of the mqtt nodes \\n - Verify whether the topics correspond to your SIMATIC S7 Connector and IE Databus configuration, change if necessary",
        "info": "",
        "x": 440,
        "y": 220,
        "wires": []
    },
    {
        "id": "9f128c41.da1d1",
        "type": "mqtt in",
        "z": "9a3fe20a.8572d",
        "name": "",
        "topic": "CloudConnector/toAWS",
        "qos": "2",
        "datatype": "auto",
        "broker": "f9797e4b.7d9c9",
        "x": 620,
        "y": 420,
        "wires": [
            [
                "c126e086.d0451"
            ]
        ]
    },
    {
        "id": "c126e086.d0451",
        "type": "debug",
        "z": "9a3fe20a.8572d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 420,
        "wires": []
    },
    {
        "id": "f9797e4b.7d9c9",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "ie-databus",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    }
]
